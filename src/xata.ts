// Generated by Xata Codegen 0.28.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "FolderData",
    columns: [
      { name: "Userid", type: "string" },
      { name: "Foldername", type: "string" },
    ],
    revLinks: [{ column: "Folder", table: "Filedata" }],
  },
  {
    name: "Filedata",
    columns: [
      { name: "Filename", type: "string" },
      { name: "File_url", type: "string" },
      { name: "Folder", type: "link", link: { table: "FolderData" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type FolderData = InferredTypes["FolderData"];
export type FolderDataRecord = FolderData & XataRecord;

export type Filedata = InferredTypes["Filedata"];
export type FiledataRecord = Filedata & XataRecord;

export type DatabaseSchema = {
  FolderData: FolderDataRecord;
  Filedata: FiledataRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Poorna-Prakash-s-workspace-g2an37.us-east-1.xata.sh/db/Storage",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
